{"version":3,"sources":["ActionTypes/ActionTypes.js","ActionTypes/Actions.js","components/Controls.js","images/flag.svg","images/bomb.svg","components/Cell.js","components/Row.js","components/MinesweeperField.js","components/Game.js","App.js","helpers/helpers.js","reducers/gameReducer.js","index.js"],"names":["RESET_GRID","START_GAME","REVEAL_CELL_COUNT","APPLY_FLAG","resetGrid","x","y","type","width","height","startGame","doNot","mineCount","Controls","props","restart","dispatch","setState","seconds","state","cancel","clearInterval","document","getElementById","value","updateMines","rerenderGrid","mines","inputRef","current","React","createRef","this","prevProps","prevState","timerIsOn","setInterval","id","hasWon","onClick","className","onChange","defaultValue","min","max","placeholder","ref","Component","connect","playerWins","flatten","grid","filter","cell","isMine","length","isFlagged","isTimerOn","classValue","flagNumber","revealed","e","preventDefault","onContextMenu","src","flag","alt","bomb","Row","row","map","index","Game","App","class","href","makeGrid","range","i","j","flattened","eachNonMine","every","allFlagged","noFalseFlag","applyFlag","c","addMinesToGrid","results","sampleSize","some","getCellAt","revealMines","visited","go","neighbors","getNeighbors","count","countMines","push","filteredNeighbor","concat","showGameOver","updateGrid","revealedMines","initial","gameReducer","action","newGrid","playerWinsResult","result","updatedGrid","store","createStore","reducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.5dc70362.chunk.js","sourcesContent":["export const RESET_GRID = \"RESET_GRID\";\r\nexport const START_GAME = \"ADD_MINES\";\r\nexport const REVEAL_CELL_COUNT = \"REVEAL_CELL_COUNT\";\r\nexport const APPLY_FLAG = \"APPLY_FLAG\";\r\n\r\n","import {RESET_GRID,START_GAME,REVEAL_CELL_COUNT,APPLY_FLAG} from './ActionTypes';\r\n\r\nexport function resetGrid(x,y){\r\n  return {\r\n    type:RESET_GRID,\r\n    width:x,\r\n    height:y\r\n  }\r\n}\r\n\r\nexport function startGame(doNot,mineCount) {\r\n  return {\r\n    type: START_GAME,\r\n    doNot: doNot,\r\n    mineCount:mineCount\r\n  }\r\n}\r\n\r\nexport function applyFlag(cell){\r\n  return {\r\n    type: APPLY_FLAG,\r\n    cell: cell\r\n  }\r\n}\r\n\r\nexport function revealCellCount(doNot) {\r\n  return {\r\n    type: REVEAL_CELL_COUNT,\r\n    doNot: doNot,\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { resetGrid } from '../ActionTypes/Actions'\r\nimport { flatten } from 'lodash'\r\n\r\n\r\nclass Controls extends React.Component {\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      cancel: null,\r\n      seconds: 0,\r\n      mines: null\r\n    }\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  restart = () => {\r\n    const { dispatch } = this.props;\r\n    this.setState({ seconds: 0 })\r\n    if (this.state.cancel !== null) {\r\n      clearInterval(this.state.cancel);\r\n    }\r\n    const x = document.getElementById(\"width\").value;\r\n    const y = document.getElementById(\"height\").value;\r\n    dispatch(resetGrid(x, y));\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({mines: this.inputRef.current.value}); \r\n  }\r\n\r\n  updateMines = () => {\r\n    this.rerenderGrid();\r\n    this.setState({ mines: this.inputRef.current.value });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    if (prevProps.timerIsOn !== this.props.timerIsOn) {\r\n      if (!this.props.timerIsOn && this.state.cancel !== null) {\r\n\r\n        clearInterval(this.state.cancel);\r\n        this.setState({ cancel: null })\r\n      }\r\n\r\n      if (this.props.timerIsOn && this.state.cancel === null) {\r\n        const callSeconds = () => {\r\n          this.setState({ seconds: this.state.seconds + 1 })\r\n        }\r\n\r\n        let cancel = setInterval(function () {\r\n          callSeconds();\r\n        }, 1000)\r\n\r\n        this.setState({ cancel: cancel })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  rerenderGrid = () => {\r\n    const { dispatch } = this.props;\r\n    this.setState({ seconds: 0 })\r\n    if (this.state.cancel !== null) {\r\n      clearInterval(this.state.cancel);\r\n    }\r\n    const x = document.getElementById(\"width\").value;\r\n    const y = document.getElementById(\"height\").value;\r\n    dispatch(resetGrid(x, y));\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div id=\"controls\">\r\n        <p id=\"displaymines\" >Mines left: {(this.props.hasWon === null && !this.props.timerIsOn) ? this.state.mines : this.props.mines}</p>\r\n        <p>Seconds played: {this.state.seconds}</p>\r\n        <p>{(this.props.hasWon !== null) ? (this.props.hasWon ? \"You won\" : \"You lost\") : null}</p>\r\n        <button onClick={this.restart} id=\"restart\">Reset Grid</button>\r\n        <div className=\"inputdiv width\">\r\n          <label>width: </label>\r\n          <input id=\"width\" type=\"number\" onChange={this.rerenderGrid} defaultValue=\"10\" min=\"5\" max=\"40\" placeholder=\"width\" />\r\n        </div>\r\n\r\n        <div className=\"inputdiv height\">\r\n          <label>height:</label>\r\n          <input id=\"height\" max=\"40\" type=\"number\" onChange={this.rerenderGrid} defaultValue=\"10\" min=\"5\" placeholder=\"height\" />\r\n        </div>\r\n        <div className=\"inputdiv mines\">\r\n          <label>mines:</label>\r\n          <input id=\"mines\" onChange={this.updateMines} type=\"number\" defaultValue=\"10\" min=\"5\" placeholder=\"mines\" ref={this.inputRef} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nControls.propTypes = {\r\n  mines:PropTypes.array,\r\n  timerIsOn:PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hasWon: state.playerWins,\r\n    mines: flatten(state.grid).filter(cell => cell.isMine).length - flatten(state.grid).filter(cell => cell.isFlagged).length,\r\n    timerIsOn: state.timerIsOn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Controls);","export default __webpack_public_path__ + \"static/media/flag.98bc8c28.svg\";","export default __webpack_public_path__ + \"static/media/bomb.cffe0f47.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {startGame, revealCellCount,applyFlag} from '../ActionTypes/Actions'\r\nimport flag from '../images/flag.svg'\r\nimport bomb from '../images/bomb.svg'\r\n\r\n\r\nconst Cell = props => {\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const {dispatch} = props;\r\n    if(!props.isTimerOn){\r\n      dispatch(startGame(props.cell,document.getElementById(\"mines\").value))\r\n    }\r\n    dispatch(revealCellCount(props.cell))\r\n  }\r\n  const rightClick = (e) => {\r\n    e.preventDefault();\r\n    const { dispatch } = props;\r\n    if (!props.isTimerOn) {\r\n      dispatch(startGame(props.cell, document.getElementById(\"mines\").value))\r\n    }\r\n    dispatch(applyFlag(props.cell))\r\n  }\r\n  const classValue = \"cell cell-\" + props.cell.flagNumber + (props.cell.revealed ? \" revealed\" : \"\");\r\n  return (\r\n    <div onClick={handleClick} className={classValue}  onContextMenu={rightClick}>\r\n     \r\n      {props.cell.isFlagged ? <img src={flag} height=\"15px\" width=\"15px\" alt=\"flag\" /> : (props.cell.revealed ? (props.cell.isMine ? <img src={bomb} height=\"15px\" width=\"15px\" alt=\"flag\" /> : (props.cell.flagNumber > 0) ? props.cell.flagNumber : null ) : null)}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return  {\r\n    isTimerOn: state.timerIsOn\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  cell:PropTypes.object,\r\n  isTimerOn:PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cell);","import React from 'react';\r\nimport Cell from './Cell';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Row = props => {\r\n  return (\r\n    <div className=\"row\">\r\n      {props.row.map((cell,index) => <Cell cell = {cell} key={index}/>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nRow.propTypes = {\r\n  row:PropTypes.array\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Row from './Row';\r\nimport {connect} from 'react-redux';\r\n\r\nconst MinesweeperField = props => {\r\n  return (\r\n    <div id=\"minesweeper\">\r\n      {props.grid.map((row,index) => {\r\n        return <Row row = {row} key={index}/>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    grid: state.grid\r\n  }\r\n}\r\n\r\nMinesweeperField.propTypes = {\r\n    grid:PropTypes.array,\r\n};\r\nexport default connect(mapStateToProps)(MinesweeperField);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from './Controls'\r\nimport MinesweeperField from './MinesweeperField'\r\n\r\nconst Game = props => {\r\n  return (\r\n    <div id=\"game\">\r\n      <Controls/>\r\n      <MinesweeperField/>\r\n    </div>\r\n  );\r\n};\r\n\r\nGame.propTypes = {\r\n  \r\n};\r\n\r\nexport default Game;","import './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <h1>Minesweeper</h1>\n      <div id=\"instructions\">\n        <p>Click on a tile to get started.</p>\n        <p>Right click to add a flag.</p>\n        <p>Each mine must be flagged for you to win the game</p>\n        <p>Avoid the bombs.</p>\n        <p>The number tells you how many bombs are nereby.</p>\n        <p>No mines ever on the first click</p>\n      </div>\n     \n      <Game/>\n      <p class=\"attribution\">Flag image by <a href=\"https://www.flaticon.com/authors/alfredo-hernandez\">Alfredo Hernandez</a></p>\n    </div>\n  );\n}\n\nexport default App;\n","import { range, sampleSize, flatten } from 'lodash'\r\n\r\nexport function makeGrid(x, y) {\r\n  return range(y).map((i) => range(x).map((j) => ({ y: i, x: j, revealed: false, flagNumber: 0, isMine: false, isFlagged: false })));\r\n}\r\n\r\nexport function playerWins(grid) {\r\n  const flattened = flatten(grid);\r\n  const eachNonMine = flattened.filter(cell => !cell.isMine).every(cell => cell.revealed);\r\n  const allFlagged = flattened.filter(cell => cell.isMine).every(cell => cell.isFlagged);\r\n  const noFalseFlag = flattened.filter(cell => !cell.isMine).every(cell => !cell.isFlagged);\r\n  return (eachNonMine && allFlagged && noFalseFlag)\r\n}\r\n\r\nexport function getCell(x, y, grid) {\r\n  return grid[y][x];\r\n}\r\n\r\nexport function applyFlag(cell, grid) {\r\n  return grid.map(row => row.map(c => {\r\n    if (c.x === cell.x && c.y === cell.y && !c.revealed) {\r\n      return { ...c, isFlagged: !c.isFlagged }\r\n    }\r\n    else {\r\n      return c;\r\n    }\r\n  }))\r\n}\r\n\r\nexport function addMinesToGrid(grid, doNot, mineCount) {\r\n  let flattened = flatten(grid).filter(cell => cell.x !== doNot.x || cell.y !== doNot.y);\r\n  const results = sampleSize(flattened, mineCount);\r\n\r\n\r\n  return grid.map((row) => row.map((cell) =>\r\n    results.some((value) => cell.x === value.x && cell.y === value.y)\r\n      ? { ...cell, isMine: true } : cell))\r\n}\r\n\r\nexport function getNeighbors({ x, y }, grid) {\r\n  const neighbors = [\r\n    getCellAt(x - 1, y, grid),\r\n    getCellAt(x - 1, y - 1, grid),\r\n    getCellAt(x, y - 1, grid),\r\n    getCellAt(x + 1, y - 1, grid),\r\n    getCellAt(x + 1, y, grid),\r\n    getCellAt(x + 1, y + 1, grid),\r\n    getCellAt(x, y + 1, grid),\r\n    getCellAt(x - 1, y + 1, grid)\r\n  ].filter(cell => cell !== null);\r\n\r\n  return neighbors;\r\n}\r\n\r\nexport function getCellAt(x, y, grid) {\r\n  if (!((y + 1) > grid.length) && !((x + 1) > grid[0].length) && x >= 0 && y >= 0) {\r\n    return grid[y][x]\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function countMines(neighbors) {\r\n  return neighbors.filter(cell => cell.isMine).length;\r\n}\r\n\r\n\r\nexport function revealMines(cell, grid) {\r\n  let visited = [];\r\n  function go(cell, grid) {\r\n    if (cell.isMine) {\r\n      return \"game over\";\r\n    }\r\n    if (visited.some(c => cell.x === c.x && cell.y === c.y)) {\r\n      return [];\r\n    }\r\n\r\n    const neighbors = getNeighbors(cell, grid);\r\n    const count = countMines(neighbors);\r\n    cell.flagNumber = count;\r\n\r\n    visited.push({ ...cell });\r\n\r\n    const filteredNeighbor = neighbors.filter(cell => !cell.isMine && !(visited.some(c => cell.x === c.x && cell.y === c.y)))\r\n\r\n    if (count === 0) {\r\n      return [{ ...cell }].concat(flatten(filteredNeighbor.map(cell => go(cell, grid))))\r\n    }\r\n    else {\r\n      return [{ ...cell }]\r\n    }\r\n  }\r\n\r\n  return go(cell, grid)\r\n}\r\n\r\nexport function showGameOver(grid) {\r\n  return [...grid.map((row) => row.map((cell) =>\r\n    cell.isMine ? { ...cell, revealed: true, isFlagged: false } : cell))]\r\n}\r\n\r\nexport function updateGrid(revealedMines, grid) {\r\n  return [...grid.map((row) => row.map((cell) =>\r\n    revealedMines.some((value) => cell.x === value.x && cell.y === value.y)\r\n      ? { ...cell, revealed: true, flagNumber: cell.flagNumber,isFlagged:false} : cell))]\r\n}\r\n","import { makeGrid, addMinesToGrid, revealMines, updateGrid, showGameOver, playerWins, applyFlag } from '../helpers/helpers'\r\nimport { RESET_GRID, START_GAME, REVEAL_CELL_COUNT, APPLY_FLAG } from '../ActionTypes/ActionTypes'\r\n\r\nconst initial = {\r\n  grid: makeGrid(10, 10),\r\n  timerIsOn: false,\r\n  playerWins: null\r\n}\r\n\r\nfunction gameReducer(state = initial, action) {\r\n  switch (action.type) {\r\n    case RESET_GRID:\r\n      return { ...state, grid: makeGrid(action.width, action.height), playerWins: null, timerIsOn: false }\r\n    case START_GAME:\r\n      if (state.playerWins === null) {\r\n        return { ...state, grid: addMinesToGrid(state.grid, action.doNot, action.mineCount), timerIsOn: true }\r\n      }\r\n      return state;\r\n    case APPLY_FLAG:\r\n      if (state.playerWins === null) {\r\n        const newGrid = applyFlag(action.cell, state.grid)\r\n        const playerWinsResult = playerWins(newGrid) ? true : null\r\n\r\n        const timerIsOn = ((playerWinsResult === true) ? false : true);\r\n        return { ...state, grid: newGrid, playerWins: playerWinsResult, timerIsOn: timerIsOn }\r\n      }\r\n      return state;\r\n    case REVEAL_CELL_COUNT:\r\n      if (state.playerWins === null) {\r\n        const result = revealMines(action.doNot, state.grid)\r\n        if (result !== \"game over\") {\r\n          const updatedGrid = updateGrid(result, state.grid)\r\n          const playerWinsResult = playerWins(updatedGrid) ? true : null;\r\n          const timerIsOn = ((playerWinsResult === true) ? false : true);\r\n\r\n          return { ...state, grid: updatedGrid, playerWins: playerWinsResult, timerIsOn: timerIsOn }\r\n        }\r\n        else {\r\n          return { ...state, grid: showGameOver(state.grid), playerWins: false, timerIsOn: false };\r\n        }\r\n      }\r\n      return state;\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default gameReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers/gameReducer';\n\n\n\nconst store = createStore(reducer)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}